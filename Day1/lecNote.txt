git ==> local data base ===> your pc 

=====> environment 
===> install ==> https://git-scm.com/downloads
====> server ==> github ===> create account ==> https://github.com/signup

=============> gui , commands (core) , vs ==> tool 

initalize git (create local repo) ==>  git init  ==> create hidden file (working  area) 

===> git status ===> status of changes
===> add files on local repo  (.git)==> git add fileName  
===> add files on local repo  (.git)==> git add fileName1   git add fileName1  
===> add files on local repo  (.git)==> git add . 
===> add files on local repo  (.git)==> git add --all  
===> add files on local repo  (.git)==> git add -a  
===> add files on local repo  (.git)==> git add * 
===> version (version) ==> commit ==> git commit -m "message" ==> x:description 
===> cheet sheet commit messgae ==> https://eqraatech.com/git-commit-message-cheatsheet/#:~:text=%D9%88%D8%B1%D9%82%D8%A9%20%D9%88%D9%82%D9%84%D9%85%20%D9%88%D9%87%D9%86%D8%AA%D9%83%D9%84%D9%85%20%D8%B9%D9%86%20%D8%A7%D9%84%D9%80,%D8%A5%D9%8A%D9%87%20%D8%A7%D9%84%D9%84%D9%8A%20%D8%A7%D8%AA%D8%BA%D9%8A%D8%B1%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%83%D9%88%D8%AF.



 

working area         staging area             local repo               remote repo ()==> related to variable ==> origin

(.git )               (queue)                                          github : repo :  https://github.com/ayaatadel/ayaatadel-dotNet_q1_2025.git
untracked files ==> git add fileName   ==> git commit -m "msg"    ==> git remote add origin repo_link
changes not added  ==> git add .                                  ==> git remote add origin  ==> git remote add origin https://github.com/ayaatadel/ayaatadel-dotNet_q1_2025.git

=> fie => add ==> changes 
                                   ==> -a: add -m: message
=======================================> git commit -am "msg"
=======================================> git commit -a -m "msg"
=======> git add . 
==> reverse  from working to staging 
         working    <====  staging
                    <=============
 git reset fileName
 git reset 

                                                                <==============================
                                                                git pull origin  master


 ===========================> 
 add file ==> change1 ==> commit
 same file ==> change2 related changes  ==> two changes on same commit ==> git commit --amend
 ===> commit amend ==>  file ==> mesg => file => add msg ==> close file 
 ===> defualt editor vs code ==>  git config --global core.editor "code --wait"



 ====> show all commits ==> git log ==> all details => id , author , msg , date
 ====> show all commits ==> git log --oneline

================== copy ================> R.click + git bash here  ==> permited to any one until repo public
 -====> copy : git clone repo_link   
 -====> copy : git clone  https://github.com/ayaatadel/ayaatadel-dotNet_q1_2025.git

===================> repo public ===> acess -==> edit xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

any one ==> acsess on repo ==> collaborator ==> setting : collaborators=>  userName , Gmail (github)

====> pull all  updates  ==> git pull origin master 


================> README.md ==> file ==> mark down language ==> text 


====> file ==>git ignore  ==> ignore files , folders ==> didn't upload (push) files 


 ==> pages ==> publish code on git hub
 /**
 * repo => public
 * index.html ==> not in any file 

 */

 =================>
 create account ==> git hub ==> 
git init
 git add .
 git commit -m ""   ------------> Error hangle configration mail , user name

 git remote add origin repo_link  -------
 git push origin master  =========>  -----------

 ===================================== Handle configration Account

 git config --global user.name "iti"
 git config --global user.email "iti@gmail.com"
